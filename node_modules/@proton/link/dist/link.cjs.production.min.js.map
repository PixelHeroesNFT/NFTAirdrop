{"version":3,"file":"link.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/errors.ts","../src/link-abi-data.ts","../src/utils.ts","../src/link-session.ts","../src/link.ts","../src/link-options.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * Error codes. Accessible using the `code` property on errors thrown by [[Link]] and [[LinkSession]].\n * - `E_DELIVERY`: Unable to request message to wallet.\n * - `E_TIMEOUT`: Request was delivered but user/wallet didn't respond in time.\n * - `E_CANCEL`: The [[LinkTransport]] canceled the request.\n * - `E_IDENTITY`: Identity proof failed to verify.\n */\nexport type LinkErrorCode = 'E_DELIVERY' | 'E_TIMEOUT' | 'E_CANCEL' | 'E_IDENTITY'\n\n/**\n * Error that is thrown if a [[LinkTransport]] cancels a request.\n * @internal\n */\nexport class CancelError extends Error {\n    public code = 'E_CANCEL'\n    constructor(reason?: string) {\n        super(`User canceled request ${reason ? '(' + reason + ')' : ''}`)\n    }\n}\n\n/**\n * Error that is thrown if an identity request fails to verify.\n * @internal\n */\nexport class IdentityError extends Error {\n    public code = 'E_IDENTITY'\n    constructor(reason?: string) {\n        super(`Unable to verify identity ${reason ? '(' + reason + ')' : ''}`)\n    }\n}\n\n/**\n * Error originating from a [[LinkSession]].\n * @internal\n */\nexport class SessionError extends Error {\n    public code: 'E_DELIVERY' | 'E_TIMEOUT'\n    constructor(reason: string, code: 'E_DELIVERY' | 'E_TIMEOUT') {\n        super(reason)\n        this.code = code\n    }\n}\n","export default {\n    version: 'eosio::abi/1.1',\n    types: [],\n    structs: [\n        {\n            name: 'sealed_message',\n            base: '',\n            fields: [\n                {\n                    name: 'from',\n                    type: 'public_key',\n                },\n                {\n                    name: 'nonce',\n                    type: 'uint64',\n                },\n                {\n                    name: 'ciphertext',\n                    type: 'bytes',\n                },\n                {\n                    name: 'checksum',\n                    type: 'uint32',\n                },\n            ],\n        },\n        {\n            name: 'link_create',\n            base: '',\n            fields: [\n                {\n                    name: 'session_name',\n                    type: 'name',\n                },\n                {\n                    name: 'request_key',\n                    type: 'public_key',\n                },\n            ],\n        },\n        {\n            name: 'link_info',\n            base: '',\n            fields: [\n                {\n                    name: 'expiration',\n                    type: 'time_point_sec',\n                },\n            ],\n        },\n    ],\n    actions: [],\n    ricardian_clauses: [],\n    error_messages: [],\n    tables: [],\n    abi_extensions: [],\n}\n","import {Numeric, Serialize} from '@proton/js'\n\nimport {Bytes, SealedMessage} from './link-abi'\nimport linkAbi from './link-abi-data'\n\nimport * as ecc from 'eosjs-ecc'\n\n/** @internal */\nconst types = Serialize.getTypesFromAbi(Serialize.createInitialTypes(), linkAbi)\n\n/**\n * Helper to ABI encode value\n * @internal\n */\nexport function abiEncode(value: any, typeName: string): Uint8Array {\n    let type = types.get(typeName)\n    if (!type) {\n        throw new Error(`No such type: ${typeName}`)\n    }\n    let buf = new Serialize.SerialBuffer()\n    type.serialize(buf, value)\n    return buf.asUint8Array()\n}\n\n/**\n * Helper to ABI decode data.\n * @internal\n */\nexport function abiDecode<ResultType = any>(data: Bytes, typeName: string): ResultType {\n    let type = types.get(typeName)\n    if (!type) {\n        throw new Error(`No such type: ${typeName}`)\n    }\n    if (typeof data === 'string') {\n        data = Serialize.hexToUint8Array(data)\n    } else if (!(data instanceof Uint8Array)) {\n        data = new Uint8Array(data)\n    }\n    let buf = new Serialize.SerialBuffer({\n        array: data,\n    })\n    return type.deserialize(buf) as ResultType\n}\n\n/**\n * Encrypt a message using AES and shared secret derived from given keys.\n * @internal\n */\nexport function sealMessage(message: string, privateKey: string, publicKey: string) {\n    const res = ecc.Aes.encrypt(privateKey, publicKey, message)\n    const data: SealedMessage = {\n        from: ecc.privateToPublic(privateKey),\n        nonce: res.nonce.toString(),\n        ciphertext: res.message,\n        checksum: res.checksum,\n    }\n    return abiEncode(data, 'sealed_message')\n}\n\n/**\n * Ensure public key is in new PUB_ format.\n * @internal\n */\nexport function normalizePublicKey(key: string) {\n    if (key.startsWith('PUB_')) {\n        return key\n    }\n    return Numeric.publicKeyToString(Numeric.stringToPublicKey('EOS' + key.substr(-50)))\n}\n\n/**\n * Return true if given public keys are equal.\n * @internal\n */\nexport function publicKeyEqual(keyA: string, keyB: string) {\n    return normalizePublicKey(keyA) === normalizePublicKey(keyB)\n}\n\n/**\n * Generate a random private key.\n * Uses browser crypto if available, otherwise falls back to slow eosjs-ecc.\n * @internal\n */\nexport async function generatePrivateKey() {\n    if (typeof window !== 'undefined' && window.crypto) {\n        const data = new Uint32Array(32)\n        window.crypto.getRandomValues(data)\n        return ecc.PrivateKey.fromBuffer(Buffer.from(data)).toString()\n    } else {\n        return await ecc.randomKey()\n    }\n}\n","import {SigningRequest} from '@proton/signing-request'\nimport {ApiInterfaces} from '@proton/js'\nimport {SessionError} from './errors'\nimport {Link, PermissionLevel, TransactArgs, TransactOptions, TransactResult} from './link'\nimport {LinkInfo} from './link-abi'\nimport {LinkTransport} from './link-transport'\nimport {abiEncode, sealMessage} from './utils'\n\n/**\n * Type describing a link session that can create a eosjs compatible\n * signature provider and transact for a specific auth.\n */\nexport abstract class LinkSession {\n    /** The underlying link instance used by the session. */\n    abstract link: Link\n    /** App identifier that owns the session. */\n    abstract identifier: string\n    /** The public key the session can sign for. */\n    abstract publicKey: string\n    /** The EOSIO auth (a.k.a. permission level) the session can sign for. */\n    abstract auth: {\n        actor: string\n        permission: string\n    }\n    /** Session type, e.g. 'channel'.  */\n    abstract type: string\n    /** Arbitrary metadata that will be serialized with the session. */\n    abstract metadata: {[key: string]: any}\n    // Proton\n    /** Account data for proton related info */\n    accountData?: any[]\n\n    /** Creates a eosjs compatible authority provider. */\n    abstract makeAuthorityProvider(): ApiInterfaces.AuthorityProvider\n    /** Creates a eosjs compatible signature provider that can sign for the session public key. */\n    abstract makeSignatureProvider(): ApiInterfaces.SignatureProvider\n    /**\n     * Transact using this session. See [[Link.transact]].\n     */\n    abstract transact(args: TransactArgs, options?: TransactOptions): Promise<TransactResult>\n    /** Returns a JSON-encodable object that can be used recreate the session. */\n    abstract serialize(): SerializedLinkSession\n\n    /**\n     * Convenience, remove this session from associated [[Link]] storage if set.\n     * Equivalent to:\n     * ```ts\n     * session.link.removeSession(session.identifier, session.auth)\n     * ```\n     */\n    async remove() {\n        if (this.link.storage) {\n            await this.link.removeSession(this.identifier, this.auth)\n        }\n    }\n    /** Restore a previously serialized session. */\n    static restore(link: Link, data: SerializedLinkSession): LinkSession {\n        switch (data.type) {\n            case 'channel':\n                return new LinkChannelSession(link, data.data, data.metadata)\n            case 'fallback':\n                return new LinkFallbackSession(link, data.data, data.metadata)\n            default:\n                throw new Error('Unable to restore, session data invalid')\n        }\n    }\n}\n\n/** @internal */\nexport interface SerializedLinkSession {\n    type: string\n    metadata: {[key: string]: any}\n    data: any\n}\n\n/** @internal */\ninterface ChannelInfo {\n    /** Public key requests are encrypted to. */\n    key: string\n    /** The wallet given channel name, usually the device name. */\n    name: string\n    /** The channel push url. */\n    url: string\n}\n\n/** @internal */\nexport interface LinkChannelSessionData {\n    /** App identifier that owns the session. */\n    identifier: string\n    /** Authenticated user permission. */\n    auth: PermissionLevel\n    /** Public key of authenticated user */\n    publicKey: string\n    /** The wallet channel url. */\n    channel: ChannelInfo\n    /** The private request key. */\n    requestKey: string\n}\n\n/**\n * Link session that pushes requests over a channel.\n * @internal\n */\nexport class LinkChannelSession extends LinkSession implements LinkTransport {\n    readonly link: Link\n    readonly auth: PermissionLevel\n    readonly identifier: string\n    readonly type = 'channel'\n    readonly metadata: any\n    readonly publicKey: string\n    serialize: () => SerializedLinkSession\n    private channel: ChannelInfo\n    private timeout = 2 * 60 * 1000 // ms\n    private encrypt: (request: SigningRequest) => Uint8Array\n\n    constructor(link: Link, data: LinkChannelSessionData, metadata: any) {\n        super()\n        this.link = link\n        this.auth = data.auth\n        this.publicKey = data.publicKey\n        this.channel = data.channel\n        this.identifier = data.identifier\n        this.encrypt = (request) => {\n            return sealMessage(request.encode(true, false), data.requestKey, data.channel.key)\n        }\n        this.metadata = {\n            ...(metadata || {}),\n            timeout: this.timeout,\n            name: this.channel.name,\n        }\n        this.serialize = () => ({\n            type: 'channel',\n            data,\n            metadata: this.metadata,\n        })\n    }\n\n    onSuccess(request: any, result: any) {\n        if (this.link.transport.onSuccess) {\n            this.link.transport.onSuccess(request, result)\n        }\n    }\n\n    onFailure(request: any, error: any) {\n        if (this.link.transport.onFailure) {\n            this.link.transport.onFailure(request, error)\n        }\n    }\n\n    onRequest(request: any, cancel: any) {\n        const info: LinkInfo = {\n            expiration: new Date(Date.now() + this.timeout).toISOString().slice(0, -1),\n        }\n        if (this.link.transport.onSessionRequest) {\n            this.link.transport.onSessionRequest(this, request, cancel)\n        }\n        setTimeout(() => {\n            cancel(new SessionError('Wallet did not respond in time', 'E_TIMEOUT'))\n        }, this.timeout + 500)\n        request.data.info.push({\n            key: 'link',\n            value: abiEncode(info, 'link_info'),\n        })\n        fetch(this.channel.url, {\n            method: 'POST',\n            headers: {\n                'X-Buoy-Wait': (this.timeout / 1000).toFixed(0),\n                'Content-Type': \"text/html\",\n                'Accept': \"text/html\"\n            },\n\n            body: this.encrypt(request),\n        })\n            .then((response: any) => {\n                if (response.status !== 200) {\n                    cancel(new SessionError('Unable to push message', 'E_DELIVERY'))\n                } else {\n                    // request delivered\n                }\n            })\n            .catch((error: any) => {\n                cancel(\n                    new SessionError(\n                        `Unable to reach link service (${error.message || String(error)})`,\n                        'E_DELIVERY'\n                    )\n                )\n            })\n    }\n\n    prepare(request: any) {\n        if (this.link.transport.prepare) {\n            return this.link.transport.prepare(request, this)\n        }\n        return Promise.resolve(request)\n    }\n\n    showLoading() {\n        if (this.link.transport.showLoading) {\n            return this.link.transport.showLoading()\n        }\n    }\n\n    public makeSignatureProvider(): ApiInterfaces.SignatureProvider {\n        return this.link.makeSignatureProvider([this.publicKey], this)\n    }\n\n    public makeAuthorityProvider(): ApiInterfaces.AuthorityProvider {\n        return this.link.makeAuthorityProvider()\n    }\n\n    transact(args: TransactArgs, options?: TransactOptions) {\n        return this.link.transact(args, options, this)\n    }\n}\n\n/** @internal */\nexport interface LinkFallbackSessionData {\n    auth: {\n        actor: string\n        permission: string\n    }\n    publicKey: string\n    identifier: string\n}\n\n/**\n * Link session that sends every request over the transport.\n * @internal\n */\nexport class LinkFallbackSession extends LinkSession implements LinkTransport {\n    readonly link: Link\n    readonly auth: {\n        actor: string\n        permission: string\n    }\n    readonly type = 'fallback'\n    readonly identifier: string\n    readonly metadata: {[key: string]: any}\n    readonly publicKey: string\n    serialize: () => SerializedLinkSession\n\n    constructor(link: Link, data: LinkFallbackSessionData, metadata: any) {\n        super()\n        this.link = link\n        this.auth = data.auth\n        this.publicKey = data.publicKey\n        this.metadata = metadata || {}\n        this.identifier = data.identifier\n        this.serialize = () => ({\n            type: this.type,\n            data,\n            metadata: this.metadata,\n        })\n    }\n\n    onSuccess(request: any, result: any) {\n        if (this.link.transport.onSuccess) {\n            this.link.transport.onSuccess(request, result)\n        }\n    }\n\n    onFailure(request: any, error: any) {\n        if (this.link.transport.onFailure) {\n            this.link.transport.onFailure(request, error)\n        }\n    }\n\n    onRequest(request: any, cancel: any) {\n        if (this.link.transport.onSessionRequest) {\n            this.link.transport.onSessionRequest(this, request, cancel)\n        } else {\n            this.link.transport.onRequest(request, cancel)\n        }\n    }\n\n    prepare(request: any) {\n        if (this.link.transport.prepare) {\n            return this.link.transport.prepare(request, this)\n        }\n        return Promise.resolve(request)\n    }\n\n    showLoading() {\n        if (this.link.transport.showLoading) {\n            return this.link.transport.showLoading()\n        }\n    }\n\n    public makeSignatureProvider(): ApiInterfaces.SignatureProvider {\n        return this.link.makeSignatureProvider([this.publicKey], this)\n    }\n\n    public makeAuthorityProvider(): ApiInterfaces.AuthorityProvider {\n        return this.link.makeAuthorityProvider()\n    }\n\n    transact(args: TransactArgs, options?: TransactOptions) {\n        return this.link.transact(args, options, this)\n    }\n}\n","import * as esr from '@proton/signing-request'\nimport {ApiInterfaces, JsonRpc, Key} from '@proton/js'\nimport WebSocket from 'isomorphic-ws'\nimport zlib from 'pako'\nimport {v4 as uuid} from 'uuid'\n\nimport {CancelError, IdentityError} from './errors'\nimport {LinkCreate} from './link-abi'\nimport {defaults, LinkOptions} from './link-options'\nimport {LinkChannelSession, LinkFallbackSession, LinkSession} from './link-session'\nimport {LinkStorage} from './link-storage'\nimport {LinkTransport} from './link-transport'\nimport {abiEncode, generatePrivateKey, normalizePublicKey, publicKeyEqual} from './utils'\n\n/** EOSIO permission level with actor and signer, a.k.a. 'auth', 'authority' or 'account auth' */\nexport type PermissionLevel = esr.abi.PermissionLevel\n\n/**\n * Payload accepted by the [[Link.transact]] method.\n * Note that one of `action`, `actions` or `transaction` must be set.\n */\nexport interface TransactArgs {\n    /** Full transaction to sign. */\n    transaction?: esr.abi.Transaction\n    /** Action to sign. */\n    action?: esr.abi.Action\n    /** Actions to sign. */\n    actions?: esr.abi.Action[]\n}\n\n/**\n * Options for the [[Link.transact]] method.\n */\nexport interface TransactOptions {\n    /**\n     * Whether to broadcast the transaction or just return the signature.\n     * Defaults to true.\n     */\n    broadcast?: boolean\n}\n\n/**\n * The result of a [[Link.transact]] call.\n */\nexport interface TransactResult {\n    /** The signing request that was sent. */\n    request: esr.SigningRequest\n    /** The transaction signatures. */\n    signatures: string[]\n    /** The callback payload. */\n    payload: esr.CallbackPayload\n    /** The signer authority. */\n    signer: PermissionLevel\n    /** The resulting transaction. */\n    transaction: esr.abi.Transaction\n    /** Serialized version of transaction. */\n    serializedTransaction: Uint8Array\n    /** Push transaction response from api node, only present if transaction was broadcast. */\n    processed?: {[key: string]: any}\n}\n\n/**\n * The result of a [[Link.identify]] call.\n */\nexport interface IdentifyResult extends TransactResult {\n    /** The identified account. */\n    account: object\n    /** The public key that signed the identity proof.  */\n    signerKey: string\n}\n\n/**\n * The result of a [[Link.login]] call.\n */\nexport interface LoginResult extends IdentifyResult {\n    /** The session created by the login. */\n    session: LinkSession\n}\n\n/**\n * Main class, also exposed as the default export of the library.\n *\n * Example:\n *\n * ```ts\n * import AnchorLink from 'anchor-link'\n * import ConsoleTransport from 'anchor-link-console-transport'\n *\n * const link = new AnchorLink({\n *     transport: new ConsoleTransport()\n * })\n *\n * const result = await link.transact({actions: myActions})\n * ```\n */\nexport class Link implements esr.AbiProvider {\n    /** The eosjs RPC instance used to communicate with the EOSIO node. */\n    public readonly rpc: JsonRpc\n    /** Transport used to deliver requests to the user wallet. */\n    public readonly transport: LinkTransport\n    /** EOSIO ChainID for which requests are valid. */\n    public readonly chainId: string\n    /** Storage adapter used to persist sessions. */\n    public readonly storage?: LinkStorage\n    private serviceAddress: string\n    private requestOptions: esr.SigningRequestEncodingOptions\n    private abiCache = new Map<string, any>()\n    private pendingAbis = new Map<string, Promise<any>>()\n    private walletType: string = ''\n\n    /** Create a new link instance. */\n    constructor(options: LinkOptions) {\n        if (typeof options !== 'object') {\n            throw new TypeError('Missing options object')\n        }\n        if (!options.transport) {\n            throw new TypeError(\n                'options.transport is required, see https://github.com/greymass/anchor-link#transports'\n            )\n        }\n        if (options.rpc === undefined || typeof options.rpc === 'string') {\n            this.rpc = new JsonRpc(options.rpc || defaults.rpc)\n        } else {\n            this.rpc = options.rpc\n        }\n        if (options.chainId) {\n            this.chainId =\n                typeof options.chainId === 'number'\n                    ? esr.nameToId(options.chainId)\n                    : options.chainId\n        } else {\n            this.chainId = defaults.chainId\n        }\n        this.serviceAddress = (options.service || defaults.service).trim().replace(/\\/$/, '')\n        this.transport = options.transport\n        if (options.storage !== null) {\n            this.storage = options.storage\n        }\n        this.requestOptions = {\n            abiProvider: this,\n            zlib,\n            scheme: options.scheme,\n        }\n        if (options.walletType && options.walletType.length > 0) {\n            this.walletType = options.walletType || ''\n        }\n    }\n\n    /**\n     * Fetch the ABI for given account, cached.\n     * @internal\n     */\n    public async getAbi(account: string) {\n        let rv = this.abiCache.get(account)\n        if (!rv) {\n            let getAbi = this.pendingAbis.get(account)\n            if (!getAbi) {\n                getAbi = this.rpc.get_abi(account)\n                this.pendingAbis.set(account, getAbi)\n            }\n            rv = (await getAbi).abi\n            this.pendingAbis.delete(account)\n            if (rv) {\n                this.abiCache.set(account, rv)\n            }\n        }\n        return rv\n    }\n\n    /**\n     * Create a new unique buoy callback url.\n     * @internal\n     */\n    public createCallbackUrl() {\n        return `${this.serviceAddress}/${uuid()}`\n    }\n\n    /**\n     * Create a SigningRequest instance configured for this link.\n     * @internal\n     */\n    public async createRequest(args: esr.SigningRequestCreateArguments, transport?: LinkTransport) {\n        const t = transport || this.transport\n        // generate unique callback url\n        let request = await esr.SigningRequest.create(\n            {\n                ...args,\n                chainId: this.chainId,\n                broadcast: false,\n                callback: {\n                    url: this.createCallbackUrl(),\n                    background: true,\n                },\n            },\n            this.requestOptions\n        )\n        if (t.prepare) {\n            request = await t.prepare(request)\n        }\n        return request\n    }\n\n    /**\n     * Send a SigningRequest instance using this link.\n     * @internal\n     */\n    public async sendRequest(\n        request: esr.SigningRequest,\n        transport?: LinkTransport,\n        broadcast = false\n    ) {\n        const t = transport || this.transport\n        try {\n            const linkUrl = request.data.callback\n            if (!linkUrl.startsWith(this.serviceAddress)) {\n                throw new Error('Request must have a link callback')\n            }\n            if (request.data.flags !== 2) {\n                throw new Error('Invalid request flags')\n            }\n            // wait for callback or user cancel\n            const ctx: {cancel?: () => void} = {}\n            const socket = waitForCallback(linkUrl, ctx).then((data) => {\n                if (typeof data.rejected === 'string') {\n                    throw new CancelError(`Rejected by wallet: ${data.rejected}`)\n                }\n                return data\n            })\n            const cancel = new Promise<never>((_, reject) => {\n                t.onRequest(request, (reason) => {\n                    if (ctx.cancel) {\n                        ctx.cancel()\n                    }\n                    if (typeof reason === 'string') {\n                        reject(new CancelError(reason))\n                    } else {\n                        reject(reason)\n                    }\n                })\n            })\n            const payload = await Promise.race([socket, cancel])\n            const signer: PermissionLevel = {\n                actor: payload.sa,\n                permission: payload.sp,\n            }\n            const signatures: string[] = Object.keys(payload)\n                .filter((key) => key.startsWith('sig') && key !== 'sig0')\n                .map((key) => payload[key]!)\n            // recreate transaction from request response\n            const resolved = await esr.ResolvedSigningRequest.fromPayload(\n                payload,\n                this.requestOptions\n            )\n            const info = resolved.request.getInfo()\n            if (info['fuel_sig']) {\n                signatures.unshift(info['fuel_sig'])\n            }\n            const {serializedTransaction, transaction} = resolved\n            const result: TransactResult = {\n                request: resolved.request,\n                serializedTransaction,\n                transaction,\n                signatures,\n                payload,\n                signer,\n            }\n            if (broadcast) {\n                const res = await this.rpc.push_transaction({\n                    signatures: result.signatures,\n                    serializedTransaction: result.serializedTransaction,\n                })\n                result.processed = res.processed\n            }\n            if (result.request.isIdentity()) {\n                await this.checkIdentity(result)\n            }\n            if (t.onSuccess) {\n                t.onSuccess(request, result)\n            }\n            return result\n        } catch (error) {\n            if (t.onFailure) {\n                t.onFailure(request, error)\n            }\n            throw error\n        }\n    }\n\n    /**\n     * Sign and optionally broadcast a EOSIO transaction, action or actions.\n     *\n     * Example:\n     *\n     * ```ts\n     * let result = await myLink.transact({transaction: myTx})\n     * ```\n     *\n     * @param args The action, actions or transaction to use.\n     * @param options Options for this transact call.\n     * @param transport Transport override, for internal use.\n     */\n    public async transact(\n        args: TransactArgs,\n        options?: TransactOptions,\n        transport?: LinkTransport\n    ): Promise<TransactResult> {\n        const t = transport || this.transport\n        const broadcast = options ? options.broadcast !== false : true\n        // Initialize the loading state of the transport\n        if (t && t.showLoading) {\n            t.showLoading()\n        }\n        // eosjs transact compat: upgrade to transaction if args have any header fields\n        let anyArgs = args as any\n        if (\n            args.actions &&\n            (anyArgs.expiration ||\n                anyArgs.ref_block_num ||\n                anyArgs.ref_block_prefix ||\n                anyArgs.max_net_usage_words ||\n                anyArgs.max_cpu_usage_ms ||\n                anyArgs.delay_sec)\n        ) {\n            args = {\n                transaction: {\n                    expiration: '1970-01-01T00:00:00',\n                    ref_block_num: 0,\n                    ref_block_prefix: 0,\n                    max_net_usage_words: 0,\n                    max_cpu_usage_ms: 0,\n                    delay_sec: 0,\n                    ...anyArgs,\n                },\n            }\n        }\n        const request = await this.createRequest(args, t)\n        const result = await this.sendRequest(request, t, broadcast)\n        return result\n    }\n\n    /**\n     * Send an identity request and verify the identity proof.\n     * Errors thrown in this function will not be shown via the onFailure modal from browser transport, but will still be lifted up to the frontend\n     * To catch these errors, place the ConnectWallet function call from @protonprotocal/proton-web-sdk into a try/catch block in the frontend\n     * In the case of a thrown error in this function, the sendRequest will still show the onSuccess modal\n     * @param requestPermission Optional request permission if the request is for a specific account or permission.\n     * @param info Metadata to add to the request.\n     * @note This is for advanced use-cases, you probably want to use [[Link.login]] instead.\n     */\n    public async identify(\n        requestPermission?: PermissionLevel,\n        info?: {[key: string]: string | Uint8Array}\n    ): Promise<IdentifyResult> {\n        const request = await this.createRequest({\n            identity: {permission: requestPermission || null},\n            info,\n        })\n        const res = await this.sendRequest(request)\n        if (!res.request.isIdentity()) {\n            throw new IdentityError(`Unexpected response`)\n        }\n        const message = Buffer.concat([\n            Buffer.from(request.getChainId(), 'hex'),\n            Buffer.from(res.serializedTransaction),\n            Buffer.alloc(32),\n        ])\n        const {signer} = res\n        const signerKey = Key.Signature.fromString(res.signatures[0]).recover(message).toLegacyString()\n        const account = await this.rpc.get_account(signer.actor)\n\n        if (requestPermission) {\n            if (\n                (requestPermission.actor !== esr.PlaceholderName &&\n                    requestPermission.actor !== signer.actor) ||\n                (requestPermission.permission !== esr.PlaceholderPermission &&\n                    requestPermission.permission !== signer.permission)\n            ) {\n                throw new IdentityError(\n                    `Unexpected identity proof from ${formatAuth(signer)}, expected ${formatAuth(\n                        requestPermission\n                    )} `\n                )\n            }\n        }\n        return {\n            ...res,\n            account,\n            signerKey,\n        }\n    }\n\n    /**\n     * The error checks in this function were taken out of Identify() to check for identity errors before onSuccess() is called in sendRequest()\n     * Using this function in sendRequest will allow any identity errors checked here to be shown via the brower transport onFailure modal\n     * @param res compliled result in sendRequest function\n     */\n    public async checkIdentity(res: TransactResult) {\n        const request = res.request\n        const message = Buffer.concat([\n            Buffer.from(request.getChainId(), 'hex'),\n            Buffer.from(res.serializedTransaction),\n            Buffer.alloc(32),\n        ])\n        const {signer} = res\n        const signerKey = Key.Signature.fromString(res.signatures[0]).recover(message).toLegacyString()\n        const account = await this.rpc.get_account(signer.actor)\n        if (!account) {\n            throw new IdentityError(`Signature from unknown account: ${signer.actor}`)\n        }\n\n        const permission = account.permissions.find(\n            ({perm_name}: any) => perm_name === signer.permission\n        )\n        if (!permission) {\n            throw new IdentityError(\n                `${signer.actor} signed for unknown permission: ${signer.permission}`\n            )\n        }\n\n        const auth = permission.required_auth\n        const keyAuth = auth.keys.find(({key}: any) => publicKeyEqual(key, signerKey))\n        if (!keyAuth) {\n            throw new IdentityError(`${formatAuth(signer)} has no key matching id signature`)\n        }\n        if (auth.threshold > keyAuth.weight) {\n            throw new IdentityError(`${formatAuth(signer)} signature does not reach auth threshold`)\n        }\n    }\n\n    /**\n     * Login and create a persistent session.\n     * @param identifier The session identifier, an EOSIO name (`[a-z1-5]{1,12}`).\n     *                   Should be set to the contract account if applicable.\n     */\n    public async login(identifier: string): Promise<LoginResult> {\n        const privateKey = await generatePrivateKey()\n        const requestKey = Key.PrivateKey.fromString(privateKey).getPublicKey().toLegacyString()\n        const createInfo: LinkCreate = {\n            session_name: identifier,\n            request_key: requestKey,\n        }\n        const res = await this.identify(undefined, {\n            link: abiEncode(createInfo, 'link_create'),\n        })\n        const metadata = {sameDevice: res.request.getRawInfo()['return_path'] !== undefined}\n        let session: LinkSession\n        if (res.payload.link_ch && res.payload.link_key && res.payload.link_name) {\n            session = new LinkChannelSession(\n                this,\n                {\n                    identifier,\n                    auth: res.signer,\n                    publicKey: res.signerKey,\n                    channel: {\n                        url: res.payload.link_ch,\n                        key: res.payload.link_key,\n                        name: res.payload.link_name,\n                    },\n                    requestKey: privateKey,\n                },\n                metadata\n            )\n        } else {\n            session = new LinkFallbackSession(\n                this,\n                {\n                    identifier,\n                    auth: res.signer,\n                    publicKey: res.signerKey,\n                },\n                metadata\n            )\n        }\n        if (this.storage) {\n            await this.storeSession(identifier, session)\n        }\n\n        if (session.auth.actor) {\n            const {rows} = await this.rpc.get_table_rows({\n                scope: 'eosio.proton',\n                code: 'eosio.proton',\n                json: true,\n                table: 'usersinfo',\n                lower_bound: session.auth.actor,\n                upper_bound: session.auth.actor,\n            })\n            if (rows && rows.length > 0) {\n                session.accountData = await this.rpc.isLightKYCVerified(rows);\n            }\n        }\n\n        // once successfully logged in, set wallet type so restore session can work properly\n        if (this.walletType.length > 0) {\n            this.storage!.write('wallet-type', this.walletType)\n        }\n\n        return {\n            ...res,\n            session,\n        }\n    }\n\n    /**\n     * Restore previous session, see [[Link.login]] to create a new session.\n     * @param identifier The session identifier, should be same as what was used when creating the session with [[Link.login]].\n     * @param auth A specific session auth to restore, if omitted the most recently used session will be restored.\n     * @returns A [[LinkSession]] instance or null if no session can be found.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session data.\n     **/\n    public async restoreSession(identifier: string, auth?: PermissionLevel) {\n        if (!this.storage) {\n            throw new Error('Unable to restore session: No storage adapter configured')\n        }\n        let key: string\n        if (auth) {\n            key = this.sessionKey(identifier, formatAuth(auth))\n        } else {\n            let latest = (await this.listSessions(identifier))[0]\n            if (!latest) {\n                return null\n            }\n            key = this.sessionKey(identifier, formatAuth(latest))\n        }\n        let data = await this.storage.read(key)\n        if (!data) {\n            return null\n        }\n        let sessionData: any\n        try {\n            sessionData = JSON.parse(data)\n        } catch (error) {\n            throw new Error(\n                `Unable to restore session: Stored JSON invalid (${error.message || String(error)})`\n            )\n        }\n        const session = LinkSession.restore(this, sessionData)\n        if (auth) {\n            // update latest used\n            await this.touchSession(identifier, auth)\n        }\n\n        if (session.auth.actor) {\n            const {rows} = await this.rpc.get_table_rows({\n                scope: 'eosio.proton',\n                code: 'eosio.proton',\n                json: true,\n                table: 'usersinfo',\n                lower_bound: session.auth.actor,\n                upper_bound: session.auth.actor,\n            })\n            if (rows && rows.length > 0) {\n                session.accountData = await this.rpc.isLightKYCVerified(rows);\n            }\n        }\n\n        return session\n    }\n\n    /**\n     * List stored session auths for given identifier.\n     * The most recently used session is at the top (index 0).\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session list.\n     **/\n    public async listSessions(identifier: string) {\n        if (!this.storage) {\n            throw new Error('Unable to list sessions: No storage adapter configured')\n        }\n        let key = this.sessionKey(identifier, 'list')\n        let list: PermissionLevel[]\n        try {\n            list = JSON.parse((await this.storage.read(key)) || '[]')\n        } catch (error) {\n            throw new Error(\n                `Unable to list sessions: Stored JSON invalid (${error.message || String(error)})`\n            )\n        }\n        return list\n    }\n\n    /**\n     * Remove stored session for given identifier and auth.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.\n     */\n    public async removeSession(identifier: string, auth: PermissionLevel) {\n        if (!this.storage) {\n            throw new Error('Unable to remove session: No storage adapter configured')\n        }\n        let key = this.sessionKey(identifier, formatAuth(auth))\n        await this.storage.remove(key)\n        await this.touchSession(identifier, auth, true)\n        if (await this.storage.read('wallet-type')) {\n            this.storage.remove('wallet-type')\n        }\n        if (await this.storage.read('user-auth')) {\n            this.storage.remove('user-auth')\n        }\n    }\n\n    /**\n     * Remove all stored sessions for given identifier.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.\n     */\n    public async clearSessions(identifier: string) {\n        if (!this.storage) {\n            throw new Error('Unable to clear sessions: No storage adapter configured')\n        }\n        for (const auth of await this.listSessions(identifier)) {\n            await this.removeSession(identifier, auth)\n        }\n    }\n\n    /**\n     * Create an eosjs compatible signature provider using this link.\n     * @param availableKeys Keys the created provider will claim to be able to sign for.\n     * @param transport (internal) Transport override for this call.\n     * @note We don't know what keys are available so those have to be provided,\n     *       to avoid this use [[LinkSession.makeSignatureProvider]] instead. Sessions can be created with [[Link.login]].\n     */\n    public makeSignatureProvider(\n        availableKeys: string[],\n        transport?: LinkTransport\n    ): ApiInterfaces.SignatureProvider {\n        return {\n            getAvailableKeys: async () => availableKeys,\n            sign: async (args) => {\n                const t = transport || this.transport\n                let request = esr.SigningRequest.fromTransaction(\n                    args.chainId,\n                    args.serializedTransaction,\n                    this.requestOptions\n                )\n                request.setCallback(this.createCallbackUrl(), true)\n                request.setBroadcast(false)\n                if (t.prepare) {\n                    request = await t.prepare(request)\n                }\n                const {serializedTransaction, signatures} = await this.sendRequest(request, t)\n                return {\n                    ...args,\n                    serializedTransaction,\n                    signatures,\n                }\n            },\n        }\n    }\n\n    /**\n     * Create an eosjs authority provider using this link.\n     * @note Uses the configured RPC Node's `/v1/chain/get_required_keys` API to resolve keys.\n     */\n    public makeAuthorityProvider(): ApiInterfaces.AuthorityProvider {\n        const {rpc} = this\n        return {\n            async getRequiredKeys(args: ApiInterfaces.AuthorityProviderArgs) {\n                const {availableKeys, transaction} = args\n                const result = await rpc.post('/v1/chain/get_required_keys', {\n                    transaction,\n                    available_keys: availableKeys.map(normalizePublicKey),\n                })\n                return result.required_keys.map(normalizePublicKey)\n            },\n        }\n    }\n\n    /** Makes sure session is in storage list of sessions and moves it to top (most recently used). */\n    private async touchSession(identifier: string, auth: PermissionLevel, remove = false) {\n        let auths = await this.listSessions(identifier)\n        let formattedAuth = formatAuth(auth)\n        let existing = auths.findIndex((a) => formatAuth(a) === formattedAuth)\n        if (existing >= 0) {\n            auths.splice(existing, 1)\n        }\n        let key = this.sessionKey(identifier, 'list')\n        if (remove === true) {\n            await this.storage!.remove(key)\n        } else {\n            auths.unshift(auth)\n            await this.storage!.write(key, JSON.stringify(auths))\n        }\n    }\n\n    /** Makes sure session is in storage list of sessions and moves it to top (most recently used). */\n    private async storeSession(identifier: string, session: LinkSession) {\n        let key = this.sessionKey(identifier, formatAuth(session.auth))\n        let data = JSON.stringify(session.serialize())\n        await this.storage!.write(key, data)\n        await this.touchSession(identifier, session.auth)\n    }\n\n    /** Session storage key for identifier and suffix. */\n    private sessionKey(identifier: string, suffix: string) {\n        return [this.chainId, identifier, suffix].join('-')\n    }\n}\n\n/**\n * Connect to a WebSocket channel and wait for a message.\n * @internal\n */\nfunction waitForCallback(url: string, ctx: {cancel?: () => void}) {\n    return new Promise<esr.CallbackPayload>((resolve, reject) => {\n        let active = true\n        let retries = 0\n        const socketUrl = url.replace(/^http/, 'ws')\n        const handleResponse = (response: string) => {\n            try {\n                resolve(JSON.parse(response))\n            } catch (error) {\n                error.message = 'Unable to parse callback JSON: ' + error.message\n                reject(error)\n            }\n        }\n        const connect = () => {\n            const socket = new WebSocket(socketUrl)\n            ctx.cancel = () => {\n                active = false\n                if (\n                    socket.readyState === WebSocket.OPEN ||\n                    socket.readyState === WebSocket.CONNECTING\n                ) {\n                    socket.close()\n                }\n            }\n            socket.onmessage = (event: any) => {\n                active = false\n                if (socket.readyState === WebSocket.OPEN) {\n                    socket.close()\n                }\n                if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n                    const reader = new FileReader()\n                    reader.onload = () => {\n                        handleResponse(reader.result as string)\n                    }\n                    reader.onerror = (error) => {\n                        reject(error)\n                    }\n                    reader.readAsText(event.data)\n                } else {\n                    if (typeof event.data === 'string') {\n                        handleResponse(event.data)\n                    } else if (event.data instanceof ArrayBuffer) {\n                        handleResponse(Buffer.from(event.data).toString())\n                    } else {\n                        handleResponse(event.data.toString())\n                    }\n                }\n            }\n            socket.onopen = () => {\n                retries = 0\n            }\n            socket.onerror = (_: any) => {}\n            socket.onclose = (_: any) => {\n                if (active) {\n                    setTimeout(connect, backoff(retries++))\n                }\n            }\n        }\n        connect()\n    })\n}\n\n/**\n * Exponential backoff function that caps off at 10s after 10 tries.\n * https://i.imgur.com/IrUDcJp.png\n * @internal\n */\nfunction backoff(tries: number): number {\n    return Math.min(Math.pow(tries * 10, 2), 10 * 1000)\n}\n\n/**\n * Format a EOSIO permission level in the format `actor@permission` taking placeholders into consideration.\n * @internal\n */\nfunction formatAuth(auth: PermissionLevel): string {\n    let {actor, permission} = auth\n    if (actor === esr.PlaceholderName) {\n        actor = '<any>'\n    }\n    if (permission === esr.PlaceholderName || permission === esr.PlaceholderPermission) {\n        permission = '<any>'\n    }\n    return `${actor}@${permission}`\n}","import {ChainName} from '@proton/signing-request'\nimport {JsonRpc} from '@proton/js'\nimport {LinkStorage} from './link-storage'\nimport {LinkTransport} from './link-transport'\n\n/**\n * Available options when creating a new [[Link]] instance.\n */\nexport interface LinkOptions {\n    /**\n     * Link transport responsible for presenting signing requests to user, required.\n     */\n    transport: LinkTransport\n    /**\n     * ChainID or esr chain name alias for which the link is valid.\n     * Defaults to EOS (aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906).\n     */\n    chainId?: string | ChainName\n    /**\n     * URL to EOSIO node to communicate with or e eosjs JsonRpc instance.\n     * Defaults to https://eos.greymass.com\n     */\n    rpc?: string | JsonRpc\n    /**\n     * URL to link callback service.\n     * Defaults to https://cb.anchor.link.\n     */\n    service?: string\n    /**\n     * Optional storage adapter that will be used to persist sessions if set.\n     * If not storage adapter is set but the given transport provides a storage, that will be used.\n     * Explicitly set this to `null` to force no storage.\n     */\n    storage?: LinkStorage | null\n    /**\n     * Scheme for transport\n     */\n    scheme?: string\n    /**\n     * Type of wallet (Anchor/Proton)\n     */\n    walletType?: string\n}\n\n/** @internal */\nexport const defaults = {\n    chainId: '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0',\n    rpc: 'https://proton.greymass.com',\n    service: 'https://cb.anchor.link',\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","CancelError","reason","IdentityError","SessionError","code","version","types","structs","base","fields","actions","ricardian_clauses","error_messages","tables","abi_extensions","Serialize","getTypesFromAbi","createInitialTypes","linkAbi","abiEncode","typeName","get","buf","SerialBuffer","serialize","asUint8Array","normalizePublicKey","startsWith","Numeric","publicKeyToString","stringToPublicKey","substr","generatePrivateKey","window","crypto","data","Uint32Array","getRandomValues","ecc","fromBuffer","Buffer","from","LinkSession","remove","link","storage","removeSession","identifier","auth","restore","LinkChannelSession","metadata","LinkFallbackSession","publicKey","channel","encrypt","request","message","encode","res","privateKey","requestKey","nonce","ciphertext","checksum","timeout","_this","onSuccess","transport","onFailure","onRequest","cancel","expiration","Date","now","toISOString","onSessionRequest","setTimeout","fetch","url","headers","toFixed","body","response","status","String","prepare","showLoading","makeSignatureProvider","makeAuthorityProvider","transact","args","options","_this2","Link","Map","rpc","JsonRpc","chainId","esr","serviceAddress","service","trim","replace","requestOptions","abiProvider","zlib","scheme","walletType","getAbi","account","rv","abiCache","pendingAbis","get_abi","set","abi","createCallbackUrl","uuid","createRequest","t","broadcast","callback","background","sendRequest","linkUrl","flags","socket","waitForCallback","ctx","rejected","_","race","signer","actor","payload","sa","permission","sp","signatures","filter","map","fromPayload","resolved","getInfo","unshift","serializedTransaction","transaction","push_transaction","processed","isIdentity","checkIdentity","anyArgs","ref_block_num","ref_block_prefix","max_net_usage_words","max_cpu_usage_ms","delay_sec","identify","requestPermission","identity","concat","getChainId","alloc","signerKey","Key","Signature","fromString","recover","toLegacyString","get_account","formatAuth","permissions","find","perm_name","keyAuth","required_auth","keyB","threshold","weight","login","PrivateKey","getPublicKey","createInfo","session_name","request_key","sameDevice","getRawInfo","session","link_ch","link_key","link_name","storeSession","get_table_rows","scope","json","table","lower_bound","upper_bound","rows","isLightKYCVerified","accountData","write","restoreSession","sessionKey","listSessions","latest","read","sessionData","JSON","parse","_context8","touchSession","list","_context9","clearSessions","availableKeys","getAvailableKeys","sign","fromTransaction","setCallback","setBroadcast","getRequiredKeys","post","available_keys","required_keys","auths","formattedAuth","existing","findIndex","a","splice","stringify","suffix","join","active","retries","socketUrl","handleResponse","connect","WebSocket","readyState","OPEN","CONNECTING","close","onmessage","event","Blob","reader","FileReader","onload","onerror","readAsText","ArrayBuffer","onopen","onclose","tries","Math","min","pow"],"mappings":"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"}